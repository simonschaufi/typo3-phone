---
# This GitHub Actions workflow uses the same development tools that are also installed locally
# via Composer or PHIVE and calls them using the Composer scripts.
name: CI with Composer scripts
on:
  push:
    paths:
      - '**.php'
      - '.github/workflows/ci.yml'
      - 'Build/phpunit/FunctionalTests.xml'
      - 'Build/phpunit/UnitTests.xml'
      - 'composer.json'
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  php-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        php: [8.1, 8.2, 8.3]

    name: "PHP linter - ${{ matrix.php }}"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          coverage: none

      - name: "Run PHP lint"
        run: find .*.php *.php Classes Configuration Tests -name '*.php' -print0 | xargs -r -0 -n 1 -P 4 php -l

  code-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        command:
          - "composer:normalize"
          - "composer:psr-verify"
          - "php:cs-fixer"
          #- "php:sniff"
          - "php:rector"
          - "yaml:lint"
          - "xliff:lint"
        php: [8.1]

    name: "Code quality checks"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: composer:v2

      - name: "Show Composer version"
        run: composer --version

      - name: "Show the Composer configuration"
        run: composer config --global --list

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          key: "php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php }}-composer-\n"

      - name: "Install Composer dependencies"
        run: composer install --no-progress

      - name: "List Installed Dependencies"
        run: composer show -D

      - name: "Run command"
        run: composer ci:${{ matrix.command }}

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: php-lint
    strategy:
      fail-fast: true
      matrix:
        php: [8.1, 8.3]
        typo3: ["^12.4"]
        stability: [prefer-lowest, prefer-stable]
#        include:
#          - typo3: "^13.0"
#            php: "8.3"
#            stability: prefer-lowest
#          - typo3: "^13.0"
#            php: "8.3"
#            stability: prefer-stable

    name: "Unit tests - PHP ${{ matrix.php }} - TYPO3 ${{ matrix.typo3 }} - ${{ matrix.stability }}"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: composer:v2

      - name: "Show Composer version"
        run: composer --version

      - name: "Show the Composer configuration"
        run: composer config --global --list

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          key: "php${{ matrix.php }}-typo3${{ matrix.typo3 }}-${{ matrix.stability }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php }}-typo3${{ matrix.typo3 }}-${{ matrix.stability }}-composer-\n"

      - name: "Install dependencies"
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: "List installed dependencies"
        run: composer show -D

      - name: "Run unit tests"
        run: composer ci:tests:unit

  functional-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: php-lint
    env:
      TYPO3_PATH_WEB: $PWD/.Build/public
    strategy:
      fail-fast: true
      matrix:
        php: [8.1, 8.3]
        typo3: ["^12.4"]
        stability: [prefer-lowest, prefer-stable]
    #        include:
    #          - typo3: "^13.0"
    #            php: "8.3"
    #            stability: prefer-lowest
    #          - typo3: "^13.0"
    #            php: "8.3"
    #            stability: prefer-stable

    name: "Functional tests - PHP ${{ matrix.php }} - TYPO3 ${{ matrix.typo3 }} - ${{ matrix.stability }}"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: composer:v2
          extensions: intl, mbstring, pdo_sqlite
          coverage: none

      - name: "Show Composer version"
        run: composer --version

      - name: "Show the Composer configuration"
        run: composer config --global --list

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          key: "php${{ matrix.php }}-typo3${{ matrix.typo3 }}-${{ matrix.stability }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php }}-typo3${{ matrix.typo3 }}-${{ matrix.stability }}-composer-\n"

      - name: "Install dependencies"
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: "List installed dependencies"
        run: composer show -D

      - name: "Run functional tests"
        run: |
          export typo3DatabaseDriver="pdo_sqlite";
          composer ci:tests:functional
