{
    "name": "simonschaufi/typo3-phone",
    "description": "Adds phone number functionality to TYPO3 based on Google's libphonenumber API.",
    "license": "GPL-2.0-or-later",
    "type": "typo3-cms-extension",
    "keywords": [
        "TYPO3",
        "libphonenumber",
        "validation",
        "phone"
    ],
    "authors": [
        {
            "name": "Simon Schaufelberger",
            "email": "simonschaufi@users.noreply.github.com"
        }
    ],
    "require": {
        "php": "~8.2.0 || ~8.3.0 || ~8.4.0",
        "ext-json": "*",
        "giggsey/libphonenumber-for-php": "^8.13.47",
        "simonschaufi/typo3-support": "^3.1.1",
        "typo3/cms-core": "^13.4"
    },
    "require-dev": {
        "composer/pcre": "^3.3.2",
        "ergebnis/composer-normalize": "^2.48.2",
        "friendsofphp/php-cs-fixer": "^3.88.2",
        "guzzlehttp/promises": "^2.3.0",
        "phpstan/phpstan": "^2.1.31",
        "phpstan/phpstan-phpunit": "^2.0.7",
        "phpunit/phpunit": "^11.5.21",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^4.0.0",
        "ssch/typo3-rector": "^3.6.2",
        "symfony/cache": "^7.3.4",
        "symfony/cache-contracts": "^3.6.0",
        "symfony/console": "^7.2.6",
        "symfony/event-dispatcher": "^7.3.3",
        "symfony/event-dispatcher-contracts": "^3.6.0",
        "symfony/translation": "^7.2.6",
        "symfony/var-exporter": "^7.3.4",
        "symfony/yaml": "^7.2.6",
        "symplify/easy-coding-standard": "^12.6",
        "typo3/class-alias-loader": "^1.2.0",
        "typo3/testing-framework": "^9.2.0"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "SimonSchaufi\\TYPO3Phone\\": "Classes"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "SimonSchaufi\\TYPO3Phone\\Tests\\": "Tests"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "typo3/class-alias-loader": true,
            "typo3/cms-composer-installers": true
        },
        "bin-dir": ".Build/bin",
        "sort-packages": true,
        "vendor-dir": ".Build/vendor"
    },
    "extra": {
        "typo3/cms": {
            "cms-package-dir": "{$vendor-dir}/typo3/cms",
            "extension-key": "typo3_phone",
            "web-dir": ".Build/public"
        }
    },
    "scripts": {
        "ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
        "ci:composer:psr-verify": "@composer dumpautoload --optimize --strict-psr --no-plugins",
        "ci:php:ecs": ".Build/bin/ecs --config=Build/ecs/ecs.php",
        "ci:php:rector": ".Build/bin/rector process --config Build/rector/rector.php --dry-run",
        "ci:php:sniff": ".Build/bin/phpcs Classes Configuration Tests",
        "ci:php:stan": ".Build/bin/phpstan analyse -c Build/phpstan/phpstan.neon --no-progress --no-interaction --memory-limit 4G",
        "ci:tests:create-directories": "mkdir -p .Build/public/typo3temp/var/tests",
        "ci:tests:functional": [
            "@ci:tests:create-directories",
            "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/bin/phpunit -c Build/phpunit/FunctionalTests.xml {}';"
        ],
        "ci:tests:unit": ".Build/bin/phpunit -c Build/phpunit/UnitTests.xml",
        "ci:xliff:lint": "php Build/bin/console lint:xliff Resources/Private/Language",
        "ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -regextype egrep -regex '.*.ya?ml$' | xargs -r php ./.Build/bin/yaml-lint",
        "fix:composer:normalize": "@composer normalize --no-check-lock",
        "fix:php:ecs": ".Build/bin/ecs --config=Build/ecs/ecs.php --fix",
        "fix:php:rector": ".Build/bin/rector process --config Build/rector/rector.php",
        "fix:php:sniff": ".Build/bin/phpcbf Classes Configuration Tests",
        "local:functional-tests": "TYPO3_PATH_ROOT=$PWD/.Build/public .Build/bin/phpunit --colors -c Build/phpunit/FunctionalTests.xml --stop-on-failure",
        "local:unit-tests": ".Build/bin/phpunit --colors -c Build/phpunit/UnitTests.xml --stop-on-failure",
        "phpstan:baseline": ".Build/bin/phpstan analyse -c Build/phpstan/phpstan.neon --no-progress --no-interaction --memory-limit 4G --generate-baseline=Build/phpstan/phpstan-baseline.neon --allow-empty-baseline",
        "test": [
            "@fix:composer:normalize",
            "@fix:php:rector",
            "@fix:php:ecs",
            "@local:unit-tests",
            "@local:functional-tests"
        ]
    },
    "scripts-descriptions": {
        "ci:composer:normalize": "Checks the composer.json.",
        "ci:composer:psr-verify": "Verifies PSR-4 namespace correctness.",
        "ci:php:ecs": "Checks the code style with easy coding standard.",
        "ci:php:rector": "Migrates code with Rector in dry run mode.",
        "ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
        "ci:php:stan": "Runs PHPStan to check for static analysis errors.",
        "ci:tests:create-directories": "Creates the directories required to smoothely run the functional tests.",
        "ci:tests:functional": "Runs the functional tests.",
        "ci:tests:unit": "Runs the unit tests.",
        "ci:xliff:lint": "Lints the XLIFF files.",
        "ci:yaml:lint": "Lints the YAML files.",
        "fix:composer:normalize": "Normalizes composer.json file content.",
        "fix:php:ecs": "Fixes the code style with easy coding standard.",
        "fix:php:rector": "Migrates code with Rector.",
        "fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
        "local:functional-tests": "Runs the functional tests.",
        "local:unit-tests": "Runs the unit tests.",
        "phpstan:baseline": "Generates the PHPStan baseline file."
    }
}
