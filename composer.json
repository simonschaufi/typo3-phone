{
    "name": "simonschaufi/typo3-phone",
    "description": "Adds phone number functionality to TYPO3 based on Google's libphonenumber API.",
    "license": "GPL-2.0-or-later",
    "type": "typo3-cms-extension",
    "keywords": [
        "TYPO3",
        "libphonenumber",
        "validation",
        "phone"
    ],
    "authors": [
        {
            "name": "Simon Schaufelberger",
            "email": "simonschaufi@users.noreply.github.com"
        }
    ],
    "require": {
        "php": "~8.1.0 || ~8.2.0 || ~8.3.0",
        "ext-json": "*",
        "giggsey/libphonenumber-for-php": "^8.13",
        "simonschaufi/typo3-support": "^2.0 || ^3.0",
        "typo3/cms-core": "^12.4"
    },
    "require-dev": {
        "ergebnis/composer-normalize": "^2.44.0",
        "friendsofphp/php-cs-fixer": "^3.64.0",
        "friendsoftypo3/phpstan-typo3": "^0.9.0",
        "phpstan/phpstan": "^1.12.5",
        "phpstan/phpstan-phpunit": "^1.4.0",
        "phpunit/phpunit": "^10.5.35",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.10.3",
        "ssch/typo3-rector": "^2.7.0",
        "symfony/console": "^5.4 || ^6.4 || ^7.0",
        "symfony/translation": "^5.4 || ^6.4 || ^7.0",
        "symfony/yaml": "^5.4 || ^6.4 || ^7.0",
        "typo3/testing-framework": "^8.2.2"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "SimonSchaufi\\TYPO3Phone\\": "Classes"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "SimonSchaufi\\TYPO3Phone\\Tests\\": "Tests"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "typo3/class-alias-loader": true,
            "typo3/cms-composer-installers": true
        },
        "bin-dir": ".Build/bin",
        "sort-packages": true,
        "vendor-dir": ".Build/vendor"
    },
    "extra": {
        "typo3/cms": {
            "cms-package-dir": "{$vendor-dir}/typo3/cms",
            "extension-key": "typo3_phone",
            "web-dir": ".Build/public"
        }
    },
    "scripts": {
        "ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
        "ci:composer:psr-verify": "@composer dumpautoload --optimize --strict-psr --no-plugins",
        "ci:php:cs-fixer": ".Build/bin/php-cs-fixer fix --config Build/php-cs-fixer/config.php -v --dry-run --diff --stop-on-violation",
        "ci:php:rector": ".Build/bin/rector process --config Build/rector/rector.php --dry-run",
        "ci:php:sniff": ".Build/bin/phpcs Classes Configuration Tests",
        "ci:php:stan": ".Build/bin/phpstan analyse -c Build/phpstan/phpstan.neon --no-progress --no-interaction --memory-limit 4G",
        "ci:tests:create-directories": "mkdir -p .Build/public/typo3temp/var/tests",
        "ci:tests:functional": [
            "@ci:tests:create-directories",
            "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/bin/phpunit -c Build/phpunit/FunctionalTests.xml {}';"
        ],
        "ci:tests:unit": ".Build/bin/phpunit -c Build/phpunit/UnitTests.xml",
        "ci:xliff:lint": "php Build/bin/console lint:xliff Resources/Private/Language",
        "ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -regextype egrep -regex '.*.ya?ml$' | xargs -r php ./.Build/bin/yaml-lint",
        "fix:composer:normalize": "@composer normalize --no-check-lock",
        "fix:php:cs": ".Build/bin/php-cs-fixer fix --config Build/php-cs-fixer/config.php",
        "fix:php:rector": ".Build/bin/rector process --config Build/rector/rector.php",
        "fix:php:sniff": ".Build/bin/phpcbf Classes Configuration Tests",
        "local:functional-tests": "TYPO3_PATH_ROOT=$PWD/.Build/public .Build/bin/phpunit --colors -c Build/phpunit/FunctionalTests.xml --stop-on-failure",
        "local:test-php-cs-fixer": ".Build/bin/php-cs-fixer fix -v --dry-run --stop-on-violation",
        "local:test-typoscript-lint": ".Build/bin/typoscript-lint -c .typoscript-lint.yml",
        "local:unit-tests": ".Build/bin/phpunit --colors -c Build/phpunit/UnitTests.xml --stop-on-failure",
        "phpstan:baseline": ".Build/bin/phpstan analyse -c Build/phpstan/phpstan.neon --no-progress --no-interaction --memory-limit 4G --generate-baseline=Build/phpstan/phpstan-baseline.neon --allow-empty-baseline",
        "test": [
            "@local:test-php-cs-fixer",
            "@local:test-typoscript-lint",
            "@local:unit-tests",
            "@local:functional-tests"
        ]
    },
    "scripts-descriptions": {
        "ci:composer:normalize": "Checks the composer.json.",
        "ci:composer:psr-verify": "Verifies PSR-4 namespace correctness.",
        "ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
        "ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
        "ci:tests:create-directories": "Creates the directories required to smoothely run the functional tests.",
        "ci:tests:functional": "Runs the functional tests.",
        "ci:tests:unit": "Runs the unit tests.",
        "ci:typoscript:lint": "Lints the TypoScript files.",
        "ci:xliff:lint": "Lints the XLIFF files.",
        "ci:yaml:lint": "Lints the YAML files.",
        "docs:generate": "Renders the extension ReST documentation.",
        "fix:composer:normalize": "Normalizes composer.json file content.",
        "fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
        "fix:php:sniff": "Fixes the code style with PHP_CodeSniffer."
    }
}
